name: Build & Test eShop

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build .NET App
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore ./eShopOnWeb.sln

    - name: Build
      run: dotnet build ./eShopOnWeb.sln --configuration Release

    - name: Test
      run: dotnet test ./eShopOnWeb.sln --configuration Release

  imageBuildAndPush:
    needs: build
    name: Build and Push to ACR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: ${{ secrets.ACR_USER }}
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD }} 
        # Container registry server url
        login-server: ${{ secrets.ACR_SERVER }}
      
    - run: |
        docker build -f src/Web/Dockerfile . -t ${{ secrets.ACR_SERVER }}/eshop:${{ github.run_id }}
        docker push ${{ secrets.ACR_SERVER }}/eshop:${{ github.run_id }}
  
  deployStaging:
    runs-on: ubuntu-latest
    needs: imageBuildAndPush
    environment: staging
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Azure WebApp ðŸŽ­
        uses: Azure/webapps-deploy@v2
        with:
          # Name of the Azure Web App
          app-name: GithubWorkshop-Kharouk
          # Enter an existing Slot other than the Production slot
          slot-name: staging # optional, default is production
          # Applies to Web App Containers only: Specify the fully qualified container image(s) name. 
          images: ${{ secrets.ACR_SERVER }}/eshop:${{ github.run_id }}
  
  deployProduction:
    runs-on: ubuntu-latest
    needs: deployStaging
    environment: production
    steps:
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Swap Staging to Production
        run: |
          az webapp deployment slot swap --name GithubWorkshop-Kharouk --resource-group GithubWorkshop98771496 --slot staging --target-slot production